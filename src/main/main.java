/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package main;

import java.util.Collections;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.SpinnerNumberModel;

/**
 *
 * @author Vinicio
 */
public class main extends javax.swing.JFrame {

    /**
     * Creates new form main
     */
    public main() {
        initComponents();
    }

    Graph Graph = new Graph();

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        nodeAddDialog = new javax.swing.JDialog();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        nodeAddName = new javax.swing.JTextField();
        nodeAddType = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        nodeAddNodeA = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        nodeAddLength = new javax.swing.JSpinner();
        nodeAddBandWidth = new javax.swing.JSpinner();
        coaxial = new javax.swing.JRadioButton();
        fiber = new javax.swing.JRadioButton();
        jLabel6 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        edgeAddDialog = new javax.swing.JDialog();
        edgeAddNodeA = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        edgeAddNodeB = new javax.swing.JComboBox<>();
        edgeAddLength = new javax.swing.JSpinner();
        edgeAddBandWidth = new javax.swing.JSpinner();
        coaxial1 = new javax.swing.JRadioButton();
        fiber1 = new javax.swing.JRadioButton();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        bG = new javax.swing.ButtonGroup();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem4 = new javax.swing.JMenuItem();

        jLabel1.setText("Nombre (Código)");

        jLabel2.setText("Punto de Nodo");

        nodeAddType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Repetidor de Red Doméstica", "Repetidor de Red Empresarial", "Antena Celular", "Conexión Dedicada" }));

        jLabel3.setText("Nodo Adjunto");

        jLabel4.setText("Distancia (m)");

        jLabel5.setText("Ancho de Banda (MB/s)");

        nodeAddLength.setModel(new javax.swing.SpinnerNumberModel(1, 1, null, 1));

        nodeAddBandWidth.setModel(new javax.swing.SpinnerNumberModel(1, 1, 100, 1));

        bG.add(coaxial);
        coaxial.setText("Cable Coaxial");
        coaxial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                coaxialActionPerformed(evt);
            }
        });

        bG.add(fiber);
        fiber.setText("Fibra Optica");
        fiber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fiberActionPerformed(evt);
            }
        });

        jLabel6.setText("Tipo de Conexión");

        jButton1.setText("Construir");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout nodeAddDialogLayout = new javax.swing.GroupLayout(nodeAddDialog.getContentPane());
        nodeAddDialog.getContentPane().setLayout(nodeAddDialogLayout);
        nodeAddDialogLayout.setHorizontalGroup(
            nodeAddDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(nodeAddDialogLayout.createSequentialGroup()
                .addGroup(nodeAddDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(nodeAddDialogLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(nodeAddDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel6)
                            .addComponent(jLabel5))
                        .addGap(65, 65, 65)
                        .addGroup(nodeAddDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(nodeAddBandWidth)
                            .addGroup(nodeAddDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(nodeAddDialogLayout.createSequentialGroup()
                                    .addComponent(coaxial)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(fiber))
                                .addComponent(nodeAddNodeA, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(nodeAddName)
                                .addComponent(nodeAddType, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(nodeAddLength, javax.swing.GroupLayout.Alignment.LEADING))))
                    .addGroup(nodeAddDialogLayout.createSequentialGroup()
                        .addGap(165, 165, 165)
                        .addComponent(jButton1)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        nodeAddDialogLayout.setVerticalGroup(
            nodeAddDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(nodeAddDialogLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(nodeAddDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(nodeAddName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(nodeAddDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addComponent(nodeAddType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(nodeAddDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3)
                    .addComponent(nodeAddNodeA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(nodeAddDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(nodeAddLength, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(nodeAddDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(coaxial)
                    .addComponent(fiber)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(nodeAddDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(nodeAddBandWidth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel7.setText("Nodo Emisor");

        jLabel8.setText("Nodo Receptor");

        edgeAddLength.setModel(new javax.swing.SpinnerNumberModel(1, 1, null, 1));

        edgeAddBandWidth.setModel(new javax.swing.SpinnerNumberModel(1, 1, 100, 1));

        bG.add(coaxial1);
        coaxial1.setSelected(true);
        coaxial1.setText("Cable Coaxial");
        coaxial1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                coaxial1ActionPerformed(evt);
            }
        });

        bG.add(fiber1);
        fiber1.setText("Fibra Optica");
        fiber1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fiber1ActionPerformed(evt);
            }
        });

        jLabel9.setText("Tipo de Conexión");

        jLabel10.setText("Distancia (m)");

        jLabel11.setText("Ancho de Banda (MB/s)");

        jButton2.setText("Construir");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout edgeAddDialogLayout = new javax.swing.GroupLayout(edgeAddDialog.getContentPane());
        edgeAddDialog.getContentPane().setLayout(edgeAddDialogLayout);
        edgeAddDialogLayout.setHorizontalGroup(
            edgeAddDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(edgeAddDialogLayout.createSequentialGroup()
                .addGroup(edgeAddDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(edgeAddDialogLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(edgeAddDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10)
                            .addComponent(jLabel9)
                            .addComponent(jLabel11)
                            .addComponent(jLabel8)
                            .addComponent(jLabel7))
                        .addGap(65, 65, 65)
                        .addGroup(edgeAddDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(edgeAddNodeB, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(edgeAddBandWidth)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, edgeAddDialogLayout.createSequentialGroup()
                                .addComponent(coaxial1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(fiber1))
                            .addComponent(edgeAddLength)
                            .addComponent(edgeAddNodeA, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(edgeAddDialogLayout.createSequentialGroup()
                        .addGap(168, 168, 168)
                        .addComponent(jButton2)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        edgeAddDialogLayout.setVerticalGroup(
            edgeAddDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(edgeAddDialogLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(edgeAddDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(edgeAddNodeA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(edgeAddDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(edgeAddLength, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(edgeAddDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(coaxial1)
                    .addComponent(fiber1)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(edgeAddDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(edgeAddBandWidth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(edgeAddDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(edgeAddNodeB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addGap(18, 18, 18)
                .addComponent(jButton2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("TOGO Mapper");
        setResizable(false);

        jButton3.setText("Análisis de Velocidad");

        jButton4.setText("Análisis de Ancho de Banda");

        jMenu1.setText("Nodo");

        jMenuItem1.setText("Agregar");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Conexión");

        jMenuItem4.setText("Crear");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem4);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton3)
                .addGap(18, 18, 18)
                .addComponent(jButton4)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        this.nodeAddNodeA.setModel(new DefaultComboBoxModel());
        for (Vertex vertex : Graph.getVertex()) {
            this.nodeAddNodeA.addItem(vertex.getName() + ", " + vertex.getType());
        }
        this.coaxial.setSelected(true);
        this.nodeAddDialog.pack();
        this.nodeAddDialog.setModal(true);
        this.nodeAddDialog.setVisible(true);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void coaxialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_coaxialActionPerformed
        if (this.coaxial.isSelected() && !this.fiber.isSelected()) {
            this.nodeAddBandWidth.setModel(new SpinnerNumberModel(1.0, 1.0, 100.0, 1.0));
        } else {
            this.nodeAddBandWidth.setModel(new SpinnerNumberModel(1.0, 1.0, 10240.0, 1.0));
        }
    }//GEN-LAST:event_coaxialActionPerformed

    private void fiberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fiberActionPerformed
        if (this.coaxial.isSelected() && !this.fiber.isSelected()) {
            this.nodeAddBandWidth.setModel(new SpinnerNumberModel(1.0, 1.0, 100.0, 1.0));
        } else {
            this.nodeAddBandWidth.setModel(new SpinnerNumberModel(1.0, 1.0, 10240.0, 1.0));
        }
    }//GEN-LAST:event_fiberActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (this.nodeAddName.getText().equals("")) {
            JOptionPane.showMessageDialog(this.nodeAddDialog, "No ha ingresado un Número", "Error de Capa 8", JOptionPane.ERROR_MESSAGE);
        } else {
            this.Graph.addNode(new Vertex(this.nodeAddName.getText(), this.nodeAddType.getSelectedItem().toString()));
            System.out.println(this.nodeAddBandWidth.getValue().toString());
            Double length = Double.parseDouble(this.nodeAddLength.getValue().toString());
            Double bandWidth = Double.parseDouble(this.nodeAddBandWidth.getValue().toString());
            this.Graph.addEdge(new Edge(length.intValue(), bandWidth.intValue(), this.Graph.getVertex()[this.nodeAddNodeA.getSelectedIndex()], this.Graph.getVertex()[this.Graph.getVertex().length - 1]));
            this.nodeAddName.setText("");
            this.nodeAddType.setSelectedIndex(0);
            this.nodeAddNodeA.setSelectedIndex(0);
            this.nodeAddLength.setValue(1);
            this.coaxial.setSelected(true);
            this.nodeAddBandWidth.setValue(1);
            this.nodeAddDialog.setModal(false);
            this.nodeAddDialog.setVisible(false);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void coaxial1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_coaxial1ActionPerformed
        if (this.coaxial1.isSelected() && !this.fiber1.isSelected()) {
            this.edgeAddBandWidth.setModel(new SpinnerNumberModel(1.0, 1.0, 100.0, 1.0));
        } else {
            this.edgeAddBandWidth.setModel(new SpinnerNumberModel(1.0, 1.0, 10240.0, 1.0));
        }
    }//GEN-LAST:event_coaxial1ActionPerformed

    private void fiber1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fiber1ActionPerformed
        if (this.coaxial1.isSelected() && !this.fiber1.isSelected()) {
            this.edgeAddBandWidth.setModel(new SpinnerNumberModel(1.0, 1.0, 100.0, 1.0));
        } else {
            this.edgeAddBandWidth.setModel(new SpinnerNumberModel(1.0, 1.0, 10240.0, 1.0));
        }
    }//GEN-LAST:event_fiber1ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        this.edgeAddNodeA.setModel(new DefaultComboBoxModel());
        for (int i = 0; i < this.Graph.getVertex().length; i++) {
            this.edgeAddNodeA.addItem(this.Graph.getVertex()[i].getName() + ", " + this.Graph.getVertex()[i].getType());
        }
        this.edgeAddNodeB.setModel(new DefaultComboBoxModel());
        for (int i = 0; i < this.Graph.getVertex().length; i++) {
            this.edgeAddNodeB.addItem(this.Graph.getVertex()[i].getName() + ", " + this.Graph.getVertex()[i].getType());
        }
        this.edgeAddDialog.pack();
        this.edgeAddDialog.setModal(true);
        this.edgeAddDialog.setVisible(true);
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        if (this.edgeAddNodeA.getSelectedIndex() == this.edgeAddNodeB.getSelectedIndex()) {
            JOptionPane.showMessageDialog(this.nodeAddDialog, "No se pueden elegir los mismos Nodos", "Error de Capa 8", JOptionPane.ERROR_MESSAGE);
        } else {
            Double length = Double.parseDouble(this.edgeAddLength.getValue().toString());
            Double bandWidth = Double.parseDouble(this.edgeAddBandWidth.getValue().toString());
            this.Graph.addEdge(new Edge(length.intValue(), bandWidth.intValue(), this.Graph.getVertex()[this.edgeAddNodeA.getSelectedIndex()], this.Graph.getVertex()[this.edgeAddNodeB.getSelectedIndex()]));
            this.edgeAddNodeA.setSelectedIndex(0);
            this.edgeAddNodeB.setSelectedIndex(0);
            this.edgeAddLength.setValue(1);
            this.coaxial1.setSelected(true);
            this.edgeAddBandWidth.setValue(1);
            this.edgeAddDialog.setModal(false);
            this.edgeAddDialog.setVisible(false);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new main().setVisible(true);
            }
        });
    }

    public static void floyd(int[][] path) {
        for (int k = 0; k < path.length; k++) {
            for (int i = 0; i < path.length; i++) {
                for (int j = 0; j < path.length; j++) {
                    path[i][j] = Math.min(path[i][j], path[i][k] + path[k][j]);
                }
            }
        }
    }

    public static void dijkstra(Vertex source) {
        source.minDistance = 0.;
        Queue vertexQueue = new Queue();
        vertexQueue.queue(source);
        while (vertexQueue.size() != 0) {
            Vertex vertex = (Vertex) vertexQueue.dequeue().getValue();
            for (Edge e : vertex.adjacencies) {
                Vertex otherVertex = e.end;
                double length = e.length;
                double distanceThroughU = vertex.minDistance + length;
                if (distanceThroughU < otherVertex.minDistance) {
                    vertexQueue.dequeue();
                    otherVertex.minDistance = distanceThroughU;
                    otherVertex.previous = vertex;
                    vertexQueue.queue(otherVertex);
                }
            }
        }
    }

    public static List shortestPath(Vertex target) {
        List path = new List();
        for (Vertex vertex = target; vertex != null; vertex = vertex.previous) {
            path.push_back(vertex);
        }
        Collections.reverseOrder();
        return path;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup bG;
    private javax.swing.JRadioButton coaxial;
    private javax.swing.JRadioButton coaxial1;
    private javax.swing.JSpinner edgeAddBandWidth;
    private javax.swing.JDialog edgeAddDialog;
    private javax.swing.JSpinner edgeAddLength;
    private javax.swing.JComboBox<String> edgeAddNodeA;
    private javax.swing.JComboBox<String> edgeAddNodeB;
    private javax.swing.JRadioButton fiber;
    private javax.swing.JRadioButton fiber1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JSpinner nodeAddBandWidth;
    private javax.swing.JDialog nodeAddDialog;
    private javax.swing.JSpinner nodeAddLength;
    private javax.swing.JTextField nodeAddName;
    private javax.swing.JComboBox<String> nodeAddNodeA;
    private javax.swing.JComboBox<String> nodeAddType;
    // End of variables declaration//GEN-END:variables
}
